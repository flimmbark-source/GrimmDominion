name: Unity CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unity-license-reminder:
    runs-on: ubuntu-latest
    if: ${{ secrets.UNITY_LICENSE == '' && secrets.UNITY_SERIAL == '' }}
    steps:
      - name: Unity license not configured
        run: |
          echo "Unity CI skipped: add a UNITY_LICENSE or UNITY_SERIAL secret to enable automated builds."

  build:
    runs-on: ubuntu-latest
    if: ${{ secrets.UNITY_LICENSE != '' || secrets.UNITY_SERIAL != '' }}
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Unity license
        if: ${{ secrets.UNITY_LICENSE != '' }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        shell: bash
        run: |
          license_file="$RUNNER_TEMP/UnityLicense.ulf"
          if printf '%s' "$UNITY_LICENSE" | base64 --decode > "$license_file" 2>/dev/null; then
            echo "Detected base64-encoded Unity license secret."
          else
            printf '%s' "$UNITY_LICENSE" > "$license_file"
          fi
          chmod 600 "$license_file"
          {
            echo "UNITY_LICENSE<<'EOF'"
            cat "$license_file"
            echo 'EOF'
          } >> "$GITHUB_ENV"
          echo "UNITY_LICENSE_FILE=$license_file" >> "$GITHUB_ENV"
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      - name: Install Unity Builder
        uses: game-ci/unity-builder@v3
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 2022.3.21f1
          allowDirtyBuild: true
      - name: Run PlayMode Tests
        uses: game-ci/unity-test-runner@v3
        with:
          unityVersion: 2022.3.21f1
          testMode: playmode
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: BuildArtifacts
          path: BuildArtifacts
          if-no-files-found: ignore
